apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tomcat
spec:
  serviceName: tomcat
  selector:
    matchLabels:
      app: tomcat
  replicas: 2
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      initContainers:
      - name: copy
        image: alpine
        command:
        - "/bin/sh"
        - "-c"
        args:
        - "cp /ROOT/index.jsp /app/index.jsp && mkdir -p /app/WEB-INF/ && cp /ROOT/web.xml /app/WEB-INF/web.xml"
        volumeMounts:
        - name: user-app
          mountPath: /ROOT
        - name: tomcat
          mountPath: /app
      containers:
      - name: tomcat
        image: registry.iximiuz.com/bee42/tomcat:11-jre21
        imagePullPolicy: IfNotPresent
#        command: ["sleep"]
#        args: ["infinity"]
        ports:
        - name: http
          containerPort: 8080
        - name: jmx
          containerPort: 8008
        - name: shutdown
          containerPort: 8007
        - name: member
          containerPort: 4000
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: CATALINA_OPTS
          value: "-DjvmRoute=$(POD_NAME)"
        - name: DNS_MEMBERSHIP_SERVICE_NAME
          value: tomcat-membership
        - name: KUBERNETES_MASTER_PROTOCOL
          value: https
        - name: KUBERNETES_SERVICE_HOST
          value: kubernetes.default.svc.cluster.local
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_LABELS
          value: app=tomcat
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        readinessProbe:
           httpGet:
             path: /health
             port: 8080
           initialDelaySeconds: 5
           periodSeconds: 5
        volumeMounts:
        - name: tomcat-bin
          mountPath: /usr/local/tomcat/bin/setenv.sh
          subPath: setenv.sh
        - name: tomcat-conf
          mountPath: /usr/local/tomcat/conf/server.xml
          subPath: server.xml
        - name: tomcat-conf
          mountPath: /usr/local/tomcat/conf/tomcat-users.xml
          subPath: tomcat-users.xml
        - name: tomcat-conf
          mountPath: /usr/local/tomcat/conf/logging.properties
          subPath: logging.properties
        - name: tomcat
          mountPath: /usr/local/tomcat/webapps/ROOT
        - name: tomcat-token
          mountPath: /run/secrets/kubernetes.io/serviceaccount
      - name: jmx-exporter
        image: docker.io/bitnami/jmx-exporter:0.20.0-debian-12-r11
        command:
        - java
        args:
        - -XX:MaxRAMPercentage=100
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "8081"
        - /etc/jmx-tomcat/jmx-tomcat-prometheus.yml
        ports:
        - name: metrics
          containerPort: 8081
        volumeMounts:
        - name: jmx-exporter
          mountPath: /etc/jmx-tomcat/jmx-tomcat-prometheus.yml
          subPath: jmx-tomcat-prometheus.yml
      automountServiceAccountToken: false
      serviceAccountName: tomcat
      volumes:
      - name: tomcat-bin
        configMap:
          name: tomcat-bin
      - name: tomcat-conf
        configMap:
          name: tomcat-conf
      - name: jmx-exporter
        configMap:
          name: jmx-exporter
      - name: user-app
        configMap:
          name: user-app
      - name: tomcat-token
        projected:
          sources:
          - secret:
              items:
              - key: token
                path: token
              name: tomcat-token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
  volumeClaimTemplates:
  - metadata:
      name: tomcat
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path
      resources:
        requests:
          storage: 5Mi
